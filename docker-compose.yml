version: '3.5'
services:
 zabbix-server:
  image: zabbix/zabbix-server-pgsql:ubuntu-4.4-latest
  ports:
   - "10051:10051"
  volumes:
   - ./zbx_env/usr/lib/zabbix/alertscripts:/usr/lib/zabbix/alertscripts:ro
   - ./zbx_env/usr/lib/zabbix/externalscripts:/usr/lib/zabbix/externalscripts:ro
   - ./zbx_env/var/lib/zabbix/export:/var/lib/zabbix/export:rw
   - ./zbx_env/var/lib/zabbix/modules:/var/lib/zabbix/modules:ro
   - ./zbx_env/var/lib/zabbix/enc:/var/lib/zabbix/enc:ro
   - ./zbx_env/var/lib/zabbix/ssh_keys:/var/lib/zabbix/ssh_keys:ro
   - ./zbx_env/var/lib/zabbix/mibs:/var/lib/zabbix/mibs:ro
   - ./zbx_env/var/lib/zabbix/snmptraps:/var/lib/zabbix/snmptraps:ro
  links:
   - postgres-server:postgres-server
  ulimits:
   nproc: 65535
   nofile:
    soft: 20000
    hard: 40000
  deploy:
   resources:
    limits:
      cpus: '0.70'
      memory: 1G
    reservations:
      cpus: '0.5'
      memory: 512M
  env_file:
   - .env_db_pgsql
   - .env_srv
  secrets:
   - POSTGRES_USER
   - POSTGRES_PASSWORD
  user: root
  depends_on:
   - postgres-server
  networks:
   zbx_net_backend:
     aliases:
      - zabbix-server
      - zabbix-server-pgsql
      - zabbix-server-ubuntu-pgsql
      - zabbix-server-pgsql-ubuntu
   zbx_net_frontend:
#  devices:
#   - "/dev/ttyUSB0:/dev/ttyUSB0"
  stop_grace_period: 30s
  sysctls:
   - net.ipv4.ip_local_port_range=1024 65000
   - net.ipv4.conf.all.accept_redirects=0
   - net.ipv4.conf.all.secure_redirects=0
   - net.ipv4.conf.all.send_redirects=0
  labels:
   com.zabbix.description: "Zabbix server with PostgreSQL database support"
   com.zabbix.company: "Zabbix LLC"
   com.zabbix.component: "zabbix-server"
   com.zabbix.dbtype: "pgsql"
   com.zabbix.os: "ubuntu"

 zabbix-web-nginx-pgsql:
  image: zabbix/zabbix-web-nginx-pgsql:ubuntu-4.4-latest
  ports:
   - "8081:80"
   - "8443:443"
  links:
   - postgres-server:postgres-server
   - zabbix-server:zabbix-server
  volumes:
   - ./zbx_env/etc/ssl/nginx:/etc/ssl/nginx:ro
  deploy:
   resources:
    limits:
      cpus: '0.70'
      memory: 512M
    reservations:
      cpus: '0.5'
      memory: 256M
  env_file:
   - .env_db_pgsql
   - .env_web
  secrets:
   - POSTGRES_USER
   - POSTGRES_PASSWORD
  user: root
  depends_on:
   - postgres-server
   - zabbix-server
  healthcheck:
   test: ["CMD", "curl", "-f", "http://localhost"]
   interval: 10s
   timeout: 5s
   retries: 3
   start_period: 30s
  networks:
   zbx_net_backend:
    aliases:
     - zabbix-web-nginx-pgsql
     - zabbix-web-nginx-ubuntu-pgsql
     - zabbix-web-nginx-pgsql-ubuntu
   zbx_net_frontend:
  stop_grace_period: 10s
  sysctls:
   - net.core.somaxconn=65535
  labels:
   com.zabbix.description: "Zabbix frontend on Nginx web-server with PostgreSQL database support"
   com.zabbix.company: "Zabbix LLC"
   com.zabbix.component: "zabbix-frontend"
   com.zabbix.webserver: "nginx"
   com.zabbix.dbtype: "pgsql"
   com.zabbix.os: "ubuntu"

 zabbix-agent:
  image: zabbix/zabbix-agent:ubuntu-4.4-latest
  ports:
   - "10050:10050"
  volumes:
   - ./zbx_env/etc/zabbix/zabbix_agentd.d:/etc/zabbix/zabbix_agentd.d:ro
   - ./zbx_env/var/lib/zabbix/modules:/var/lib/zabbix/modules:ro
   - ./zbx_env/var/lib/zabbix/enc:/var/lib/zabbix/enc:ro
   - ./zbx_env/var/lib/zabbix/ssh_keys:/var/lib/zabbix/ssh_keys:ro
  links:
   - zabbix-server:zabbix-server
  deploy:
   resources:
    limits:
      cpus: '0.2'
      memory: 128M
    reservations:
      cpus: '0.1'
      memory: 64M
   mode: global
  env_file:
   - .env_agent
  user: root
  privileged: true
  pid: "host"
  networks:
   zbx_net_backend:
    aliases:
     - zabbix-agent
     - zabbix-agent-passive
     - zabbix-agent-ubuntu
  stop_grace_period: 5s
  labels:
   com.zabbix.description: "Zabbix agent"
   com.zabbix.company: "Zabbix LLC"
   com.zabbix.component: "zabbix-agentd"
   com.zabbix.os: "ubuntu"


 postgres-server:
  image: postgres:latest
  volumes:
   - ./zbx_env/var/lib/postgresql/data:/var/lib/postgresql/data:rw
  env_file:
   - .env_db_pgsql
  secrets:
   - POSTGRES_USER
   - POSTGRES_PASSWORD
  user: root
  stop_grace_period: 1m
  healthcheck:
   test: ["CMD-SHELL", "pg_isready -U postgres"]
   interval: 10s
   timeout: 5s
   retries: 5
  networks:
   zbx_net_backend:
    aliases:
     - postgres-server
     - pgsql-server
     - pgsql-database

 zookeeper:
  image: confluentinc/cp-zookeeper:5.4.1
  hostname: zookeeper
  container_name: zookeeper
  networks:
   kafka_net_backend:
  healthcheck:
   test: ["CMD-SHELL", "echo ruok | nc -w 2 zookeeper 2181"]
   interval: 5s
   timeout: 10s
   retries: 3
  volumes:
   - ./zk_data:/var/lib/zookeeper/data:rw
   - ./zk_logs:/var/lib/zookeeper/log:rw
  env_file:
   - .env_zookeeper

 kafka:
  image: confluentinc/cp-server:5.4.1
  hostname: broker
  container_name: broker
  networks:
    kafka_net_backend:
    kafka_net_frontend:
  depends_on:
   - zookeeper
  volumes:
   - ./kafka:/var/lib/kafka/data:rw
   - up-flag:/data
  links:
   - zookeeper
  ports:
    - "9092:9092"
  command: 
    - bash 
    - -c 
    - |
      rm -f /data/kafka-is-up
      # Launch Kafka
      /etc/confluent/docker/run &
      # Wait for Kafka to start and then create a file to 
      # indicate that it's listening
      echo "Waiting for Kafka to start listening on 9092 ⏳"
      nc -vz localhost 9092
      is_up=$$?
      while [ $$is_up -ne 0 ] ; do 
        echo -e $$(date) $$(nc -z localhost 9092)
        nc -vz localhost 9092
        is_up=$$?
        sleep 5 
      done
      echo "Kakfa is now listening! :-)"
      touch /data/kafka-is-up
      sleep infinity
  healthcheck:
   test: ["CMD", "bash", "-c", "unset" , "JMX_PORT" ,";" ,"kafka-topics.sh","--zookeeper","zookeeper:2181","--list"]
  env_file:
   - .env_kafka

 migrator:
  build:
    context: .
    args:
      BUILD_DATE: $BUILD_DATE
      BUILD_VERSION: $BUILD_VERSION
  container_name: migrator
  links:
   - kafka
   - zabbix-web-nginx-pgsql
  networks:
   zbx_net_backend:
   kafka_net_backend:
  depends_on:
   - kafka
   - zabbix-web-nginx-pgsql
  entrypoint: /bin/bash -c "/bin/bash -c \"$${@}\""
  command: 
   - bash 
   - -c 
   - |
     echo "Waiting for flag that Kafka is up… ⏳"
     until [ -f /data/kafka-is-up ]
     do
         echo -e $$(date) ": Waiting for flag that Kafka is up… ⏳"
         sleep 5
     done
     echo -e $$(date) ": \o/ Got the flag that Kafka is up!"
     python main.py
  environment:
   KAFKA_BROKERS: broker:9092
   KAFKA_TOPIC: zabbix
   ZBX_HOST: http://zabbix-web-nginx-pgsql
   ZBX_USER: Admin
   ZBX_PASSWD: zabbix
  volumes:
   - up-flag:/data



 db_data_pgsql:
  image: busybox
  volumes:
   - ./zbx_env/var/lib/postgresql/data:/var/lib/postgresql/data:rw


networks:
  zbx_net_frontend:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default
      config:
      - subnet: 172.16.238.0/24
  zbx_net_backend:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    internal: true
    ipam:
      driver: default
      config:
      - subnet: 172.16.239.0/24
  kafka_net_frontend:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default
      config:
      - subnet: 172.16.240.0/24
  kafka_net_backend:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    internal: true
    ipam:
      driver: default
      config:
      - subnet: 172.16.241.0/24

secrets:
  POSTGRES_USER:
    file: ./.POSTGRES_USER
  POSTGRES_PASSWORD:
    file: ./.POSTGRES_PASSWORD

volumes:
 up-flag: {}